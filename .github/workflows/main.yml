name: build_deps

on:
  push:
    branches:
      - master
    tags:
      - '20[2-9][0-9]-[0-9][0-9]-[0-9][0-9]'
  pull_request:
    paths-ignore:
      - '**.md'
    branches:
      - master

jobs:
  ffmpeg-build:
    name: 'Build FFmpeg'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        target: [macos-arm64, macos-x86_64, linux-x86_64, windows-x64, windows-x86]
        include:
          - target: macos-arm64
            os: 'macos-11'
            config: 'Release'
            type: 'static'
          - target: macos-x86_64
            os: 'macos-11'
            config: 'Release'
            type: 'static'
          - target: linux-x86_64
            os: 'ubuntu-20.04'
            config: 'Release'
            type: 'static'
          - target: windows-x64
            os: 'ubuntu-20.04'
            config: 'Release'
            type: 'static'
          - target: windows-x86
            os: 'ubuntu-20.04'
            config: 'Release'
            type: 'static'
    env:
      CACHE_REVISION: '5'
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup Environment
        id: setup
        run: |
          case "${{ runner.os }}" in
            Linux)
              sudo apt update
              sudo apt install zsh
              ;;
            macOS)
              to_remove=()

              for formula in llvm gcc postgresql openjdk sox libsndfile flac libvorbis opusfile \
                libogg composer php gd freetype fontconfig webp libpng lame libtiff opus kotlin \
                sbt libxft libxcb; do
                if [[ -d /usr/local/opt/"${formula}" ]]; then
                  to_remove+=(${formula})
                fi
              done
              if [[ ${#to_remove} -gt 0 ]]; then
                brew uninstall --ignore-dependencies ${to_remove[@]}
              fi
              ;;
          esac

          target='${{ matrix.target }}'
          artifact_name="ffmpeg-${target}-${{ github.sha }}"
          file_name="${target%%-*}-ffmpeg-$(date +"%Y-%m-%d")-${target##*-}.tar.xz"

          echo "::set-output name=artifactName::${artifact_name}"
          echo "::set-output name=artifactFileName::${file_name}"
          echo "::set-output name=ccacheDate::$(date +"%Y-%m-%d")"

      - name: Restore Compilation Cache
        id: ccache-cache
        uses: actions/cache@v2.1.6
        with:
          path: ${{ github.workspace }}/.ccache
          key: ${{ matrix.target }}-ccache-ffmpeg-${{ steps.setup.outputs.ccacheDate }}

      - name: Check for GitHub Labels
        id: seekingTesters
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if [[ -n "$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s "${{ github.event.pull_request.url }}" | jq -e '.labels[] | select(.name == "Seeking Testers")')" ]]; then
            echo "::set-output name=found::true"
          else
            echo "::set-output name=found::false"
          fi

      - name: Build FFmpeg
        uses: ./.github/actions/build-ffmpeg
        with:
          target: ${{ matrix.target }}
          type: ${{ matrix.type }}
          config: ${{ matrix.config }}
          cacheRevision: ${{ env.CACHE_REVISION }}

      - name: Publish Build Artifacts
        if: ${{ success() && (github.event_name != 'pull_request' || steps.seekingTesters.outputs.found == 'true') }}
        uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ steps.setup.outputs.artifactName }}
          path: ${{ github.workspace }}/${{ matrix.target }}/${{ steps.setup.outputs.artifactFileName }}

  ffmpeg-package-universal:
    name: 'Build FFmpeg (Universal)'
    runs-on: macos-11
    needs: [ffmpeg-build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Check for GitHub Labels
        id: seekingTesters
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if [[ -n "$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s "${{ github.event.pull_request.url }}" | jq -e '.labels[] | select(.name == "Seeking Testers")')" ]]; then
            echo "::set-output name=found::true"
          else
            echo "::set-output name=found::false"
          fi

      - name: Create universal binary package
        if: ${{ success() && (github.event_name != 'pull_request' || steps.seekingTesters.outputs.found == 'true') }}
        uses: ./.github/actions/create-universal
        with:
          arm64: 'ffmpeg-macos-arm64-${{ matrix.type }}-${{ github.sha }}'
          x86_64: 'ffmpeg-macos-x86_64-${{ matrix.type }}-${{ github.sha }}'
          outputName: 'ffmpeg-macos-universal-${{ matrix.type }}-${{ github.sha }}'

setup_dep() {
  autoload -Uz dep_checkout dep_download extract mkcd

  local -r _usage="Usage: %B${0}%b <url> <hashfile|commit> [<branch> <pull_request>]

Download dependency or checkout specified git repository.

%BOptions%b:

  %Burl%b            Download URL or git repository URL
  %Bhashfile%b       Path to hash file generated by %Usha256sum%u
  %Bcommit%b         Git commit id for checkout (%F(yellow)mandatory for git checkouts%f)

  %Bbranch%b         Branch to use for git checkout (%F(blue)optional%f)
  %Bpull_request%b   GitHub-based pull request ID to use for git checkout (%F(blue)optional%f)"

  if (( # < 2 )) {
    log_error "%F{red}${0}: Called without enough arguments.%f"
    log ${_usage}
    return 2
  }

  local url hash branch pull_request

  read -r url hash branch pull_request <<< "${@}"

  if [[ ${url##*.} == 'git' ]] {
    log_info "Git checkout ${url} with commit ${hash}${branch:+" (branch: ${branch})")}"

    mkcd ${dir}

    local options=(
      ${url}
      ${hash}
    )

    if [[ -n ${branch} ]] options+=(--branch ${branch})
    if [[ -n ${pull_request} ]] options+=(--pr ${pull_request})

    dep_checkout ${options}
  } else {
    log_info "Download ${url}"
    dep_download ${url} ${hash}

    if (( ! ${skips[(Ie)unpack]} )) {
      log_info "Extract ${url##*/}"
      extract ${url##*/}
    }
  }
}
